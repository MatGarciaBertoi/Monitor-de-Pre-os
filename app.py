# Arquivo: app.py
import streamlit as st
import pandas as pd
import os

# --- Configura칞칚o da P치gina ---
st.set_page_config(layout="wide", page_title="Dashboard de Pre칞os")
st.title("游늵 Dashboard do Monitor de Pre칞os")
st.write("Esta aplica칞칚o exibe o hist칩rico de pre칞os coletado pelo seu monitor.")

# --- Carregamento dos Dados ---
ARQUIVO_DADOS = "historico_precos.csv"

@st.cache_data(ttl=600) # Recarrega os dados a cada 10 minutos
def carregar_dados():
    if os.path.exists(ARQUIVO_DADOS):
        df = pd.read_csv(ARQUIVO_DADOS)
        df['data_hora'] = pd.to_datetime(df['data_hora'])
        return df
    return pd.DataFrame() # Retorna um DataFrame vazio se o arquivo n칚o existir

df = carregar_dados()

if df.empty:
    st.warning("Ainda n칚o h치 dados para exibir. Rode o `monitor.py` para come칞ar a coletar pre칞os.")
else:
    # --- Interface ---
    st.sidebar.header("Filtros")
    produtos_disponiveis = ["Todos"] + list(df['produto'].unique())
    produto_selecionado = st.sidebar.selectbox("Selecione um Produto:", produtos_disponiveis)

    if produto_selecionado != "Todos":
        df_filtrado = df[df['produto'] == produto_selecionado]
    else:
        df_filtrado = df
    
    # --- Exibi칞칚o dos Dados ---
    st.header(f"Exibindo dados para: {produto_selecionado}")

    # Gr치fico
    st.subheader("Gr치fico de Evolu칞칚o de Pre칞os")
    if not df_filtrado.empty:
        st.line_chart(
            df_filtrado.rename(columns={'data_hora':'index'}).set_index('index')['preco']
        )
    else:
        st.info("N칚o h치 dados para o produto selecionado.")

    # Tabela de Dados
    st.subheader("Hist칩rico Detalhado")
    st.dataframe(df_filtrado)

    # Bot칚o para recarregar
    if st.button("Recarregar Dados"):
        st.cache_data.clear()
        st.experimental_rerun()